spring:
  application:
    name: notification
  cloud:
    function:
      definition: orderCreated
    stream:
      function:
        definition: orderCreated
      bindings:
        orderCreated-in-0:
          destination: order.exchange
          group: notification-group
          content-type: application/json
      rabbit:
        bindings:
          createdOrder-out-0:
            producer:
              routing-key-expression: '''order.tracking'''
      #kafka:
       # binder:
        #  brokers: localhost:9092

#  rabbitmq:
#    host: ${RABBITMQ_HOST:localhost}
#    port: ${RABBITMQ_PORT:5672}
#    username: ${RABBITMQ_USERNAME:guest}
#    password: ${RABBITMQ_PASSWORD:guest}
#    virtual-host: ${RABBITMQ_VHOST:guest}
#    connection-timeout: 30000

server:
  port:
    8084


#rabbitmq:
#  exchange:
#    name: order.exchange
#  queue:
#    name: order.queue
#  routing:
#    key: order.tracking
eureka:
  instance:
    hostname:localhost
    prefer-id-address:true